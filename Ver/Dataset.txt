Boa ðŸ‘·ðŸ“·, vamos montar o **modelo de dataset** para treinar o YOLO detectar uso (ou ausÃªncia) de EPIs.

---

# ðŸ“‚ Estrutura do dataset para YOLO

O YOLO (v5, v8, etc.) trabalha com **imagens** + **arquivos de anotaÃ§Ã£o** em formato `.txt`, onde cada linha representa um objeto na imagem.

```
dataset_epi/
â”‚â”€â”€ images/
â”‚   â”œâ”€â”€ train/        # imagens de treino
â”‚   â”œâ”€â”€ val/          # imagens de validaÃ§Ã£o
â”‚   â””â”€â”€ test/         # imagens de teste (opcional)
â”‚
â”‚â”€â”€ labels/
â”‚   â”œâ”€â”€ train/        # anotaÃ§Ãµes correspondentes Ã s imagens de treino
â”‚   â”œâ”€â”€ val/          # anotaÃ§Ãµes de validaÃ§Ã£o
â”‚   â””â”€â”€ test/         # anotaÃ§Ãµes de teste
â”‚
â””â”€â”€ data.yaml         # configuraÃ§Ã£o do dataset
```

---

# ðŸ“Œ Exemplo do `data.yaml`

Esse arquivo diz ao YOLO onde estÃ£o as imagens e quais classes existem.

```yaml
train: ./images/train
val: ./images/val
test: ./images/test

nc: 6  # nÃºmero de classes
names: ["capacete", "sem_capacete", "oculos", "sem_oculos", "colete", "sem_colete"]
```

---

# ðŸ“Œ Formato das anotaÃ§Ãµes (`labels/*.txt`)

Cada arquivo `.txt` tem o **mesmo nome da imagem** e contÃ©m as caixas delimitadoras.

Formato (YOLO):

```
<class_id> <x_center> <y_center> <width> <height>
```

* `class_id` â†’ Ã­ndice da classe (ex: 0 = capacete, 1 = sem\_capacete, etc.)
* Coordenadas **normalizadas entre 0 e 1** em relaÃ§Ã£o Ã  largura/altura da imagem.

---

## Exemplo

Imagem: `trabalhador1.jpg`
AnotaÃ§Ã£o: `trabalhador1.txt`

```
0 0.52 0.40 0.20 0.35   # capacete
2 0.50 0.70 0.25 0.40   # oculos
4 0.55 0.85 0.30 0.40   # colete
```

Imagem: `trabalhador2.jpg` (sem capacete e sem Ã³culos)
AnotaÃ§Ã£o: `trabalhador2.txt`

```
1 0.52 0.40 0.20 0.35   # sem_capacete
3 0.50 0.70 0.25 0.40   # sem_oculos
4 0.55 0.85 0.30 0.40   # colete
```

---

# ðŸ“Œ Classes sugeridas para EPI

| ID | Classe        |
| -- | ------------- |
| 0  | capacete      |
| 1  | sem\_capacete |
| 2  | oculos        |
| 3  | sem\_oculos   |
| 4  | colete        |
| 5  | sem\_colete   |

---

# ðŸ“œ Anotando imagens

VocÃª pode usar ferramentas para marcar os objetos:

* [LabelImg](https://github.com/heartexlabs/labelImg) (desktop)
* [Roboflow](https://roboflow.com/) (online, muito prÃ¡tico)
* [makesense.ai](https://www.makesense.ai/) (online e grÃ¡tis)

Essas ferramentas permitem desenhar **caixas ao redor dos EPIs** e exportar direto no formato YOLO.

---

# ðŸš€ Fluxo resumido para criar dataset

1. Coletar imagens de trabalhadores em obras (com e sem EPI).
2. Anotar manualmente usando **LabelImg/Roboflow**.
3. Exportar no formato YOLO.
4. Organizar no diretÃ³rio `dataset_epi/`.
5. Treinar YOLO com:

   ```bash
   python train.py --img 640 --batch 16 --epochs 50 --data data.yaml --weights yolov5n.pt
   ```

---

ðŸ‘‰ Quer que eu jÃ¡ monte um **exemplo de 5 imagens sintÃ©ticas anotadas** (mock dataset) para vocÃª ter uma base inicial sem precisar coletar fotos reais?
